<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="44" failures="0" errors="0" time="1.256">
  <testsuite name="test utils" errors="0" failures="0" skipped="0" timestamp="2024-07-11T17:55:59" time="0.833" tests="44">
    <testcase classname="test utils formatCurrency when legal positive amount should return correct format" name="test utils formatCurrency when legal positive amount should return correct format" time="0.027">
    </testcase>
    <testcase classname="test utils formatCurrency when legal positive amount should return correct format" name="test utils formatCurrency when legal positive amount should return correct format" time="0.001">
    </testcase>
    <testcase classname="test utils formatCurrency when positive amount - with dot should return correct format" name="test utils formatCurrency when positive amount - with dot should return correct format" time="0.001">
    </testcase>
    <testcase classname="test utils formatType when type is credit should return correct translation" name="test utils formatType when type is credit should return correct translation" time="0.001">
    </testcase>
    <testcase classname="test utils formatType when type is credit_by_other should return correct translation" name="test utils formatType when type is credit_by_other should return correct translation" time="0.002">
    </testcase>
    <testcase classname="test utils formatType when type is credit_to_other should return correct translation" name="test utils formatType when type is credit_to_other should return correct translation" time="0">
    </testcase>
    <testcase classname="test utils formatType when type is wire should return correct translation" name="test utils formatType when type is wire should return correct translation" time="0.002">
    </testcase>
    <testcase classname="test utils formatType when type is cash should return correct translation" name="test utils formatType when type is cash should return correct translation" time="0">
    </testcase>
    <testcase classname="test utils formatType when type is prize should return correct translation" name="test utils formatType when type is prize should return correct translation" time="0.002">
    </testcase>
    <testcase classname="test utils formatType when type is unknown should return correct translation" name="test utils formatType when type is unknown should return correct translation" time="0.002">
    </testcase>
    <testcase classname="test utils formatDateToLocal when input is legal date should return correct value" name="test utils formatDateToLocal when input is legal date should return correct value" time="0.007">
    </testcase>
    <testcase classname="test utils formatDateToLocal when input is ilegal date should return correct value" name="test utils formatDateToLocal when input is ilegal date should return correct value" time="0.003">
    </testcase>
    <testcase classname="test utils getTime when input is date time string should return correct time" name="test utils getTime when input is date time string should return correct time" time="0.004">
    </testcase>
    <testcase classname="test utils getTime when input is date time string should return correct time" name="test utils getTime when input is date time string should return correct time" time="0">
    </testcase>
    <testcase classname="test utils getTime when input is date time string should return correct time" name="test utils getTime when input is date time string should return correct time" time="0">
    </testcase>
    <testcase classname="test utils getTime when input is date time string should return correct time" name="test utils getTime when input is date time string should return correct time" time="0.002">
    </testcase>
    <testcase classname="test utils getTime when input is date time string should return correct time" name="test utils getTime when input is date time string should return correct time" time="0.002">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &lt;= 7 should return correct value" name="test utils generatePagination when totalPages &lt;= 7 should return correct value" time="0.001">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &lt;= 7 should return correct value" name="test utils generatePagination when totalPages &lt;= 7 should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &lt;= 7 should return correct value" name="test utils generatePagination when totalPages &lt;= 7 should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &lt;= 7 should return correct value" name="test utils generatePagination when totalPages &lt;= 7 should return correct value" time="0.002">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" time="0.001">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" time="0.004">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &lt;= 3 should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" time="0.001">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" name="test utils generatePagination when totalPages &gt; 7 AND currentPage &gt;= totalPages - 2 should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when default should return correct value" name="test utils generatePagination when default should return correct value" time="0">
    </testcase>
    <testcase classname="test utils generatePagination when default should return correct value" name="test utils generatePagination when default should return correct value" time="0">
    </testcase>
    <testcase classname="test utils positionComparator when given 2 players should return correct position order " name="test utils positionComparator when given 2 players should return correct position order " time="0.001">
    </testcase>
    <testcase classname="test utils positionComparator when given 2 players should return correct position order " name="test utils positionComparator when given 2 players should return correct position order " time="0">
    </testcase>
    <testcase classname="test utils positionComparator when given 2 players should return correct position order " name="test utils positionComparator when given 2 players should return correct position order " time="0">
    </testcase>
    <testcase classname="test utils nameComparator when given 2 players should return correct position order " name="test utils nameComparator when given 2 players should return correct position order " time="0">
    </testcase>
    <testcase classname="test utils nameComparator when given 2 players should return correct position order " name="test utils nameComparator when given 2 players should return correct position order " time="0">
    </testcase>
    <testcase classname="test utils nameComparator when given 2 players should return correct position order " name="test utils nameComparator when given 2 players should return correct position order " time="0">
    </testcase>
    <testcase classname="test utils phoneNumberComparator when given 2 users should return correct phone number order " name="test utils phoneNumberComparator when given 2 users should return correct phone number order " time="0.001">
    </testcase>
    <testcase classname="test utils phoneNumberComparator when given 2 users should return correct phone number order " name="test utils phoneNumberComparator when given 2 users should return correct phone number order " time="0">
    </testcase>
    <testcase classname="test utils phoneNumberComparator when given 2 users should return correct phone number order " name="test utils phoneNumberComparator when given 2 users should return correct phone number order " time="0">
    </testcase>
    <testcase classname="test utils getTodayShortDate when  should return correct val" name="test utils getTodayShortDate when  should return correct val" time="0">
    </testcase>
    <testcase classname="test utils getDayOfTheWeek when given a date should return correct day of the week" name="test utils getDayOfTheWeek when given a date should return correct day of the week" time="0.001">
    </testcase>
    <testcase classname="test utils getDayOfTheWeek when given a date should return correct day of the week" name="test utils getDayOfTheWeek when given a date should return correct day of the week" time="0">
    </testcase>
    <testcase classname="test utils getDayOfTheWeek when given a date should return correct day of the week" name="test utils getDayOfTheWeek when given a date should return correct day of the week" time="0.001">
    </testcase>
    <testcase classname="test utils sumArrayByProp when given an array and a prop should sum array By the given Prop" name="test utils sumArrayByProp when given an array and a prop should sum array By the given Prop" time="0.003">
    </testcase>
    <testcase classname="test utils sumArrayByProp when given an array and a prop should sum array By the given Prop" name="test utils sumArrayByProp when given an array and a prop should sum array By the given Prop" time="0">
    </testcase>
  </testsuite>
</testsuites>